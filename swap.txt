
def PickFieldToHarvest(Order, NReds, NWhites, CPad, FieldMap):

    # How do we pick which field we want to harvest?
    # It is based on what you have (crush, fields)
    # and what you need (order)
    # We do not care about what we have currently in the cellar.
    # Why?
    # -> Because we know what grades of grapes we need to fill an order.
    #    We will be removing the grades that we need as we harvest the fields.
    #

    # Assume that the needed reds and whites are fully up to date.
    # This is an okay assumption to make because we handle updating this
    NumReds = len(NReds)
    NumWhites = len(NWhites)

    NReds = sorted(NReds)
    NWhites = sorted(NWhites)

    # Goal: Pick the field to harvest so that we maximize how we fill our needs
    # Really, we do not care about the numbers per se.
    # It is important to make note of the ratio in a field as well as the overall grade that
    # we get from the field.
    #
    # Since we only have three fields, I think it may be best to brute force it.
    SHarvest = SField.HarvestField(Estimate=True)
    MHarvest = MField.HarvestField(Estimate=True)
    LHarvest = LField.HarvestField(Estimate=True)

    SScore, MScore, LScore = 0, 0, 0
    # Find out which field best fulfills our needs.
    # We will give each field a score. A unitless number that represents how well it fits the needs we were presented.

    # If you need a 7 red and a 5 white and you have a field with 5 red and 4 white, you should give priority to the
    # Red field. Because, if you harvest that first, then you will have 5R, then next year you have 6R/4W, then 7R/5W.
    # 1: 5R 2: 6R/4W 2: 7R/5W
    # If we do it the other way, we get:
    # 1: 4W 2: 5R/5W 3: 6R/6W 4: 7R/7W
    # It takes an extra two years to fill the need.
    # This means that we cannot simply pick a field based on how soon the need will be filled.




    pass
